services:
  dexon_db:
    image: postgres:latest
    restart: unless-stopped
    container_name: dexon_db
    environment:
      POSTGRES_USER: postgres 
      POSTGRES_PASSWORD: 4mIcGa6kyxuM1tAF6PnEprSuIQ52qGQyI6OtOnhnGZIcNb7G25
      POSTGRES_DB: dexon
    ports:
      - "5432:5432"
    volumes:
      - dexon_db:/var/lib/postgresql/data
    networks:
      - dexon-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  openobserve:
    image: public.ecr.aws/zinclabs/openobserve:latest
    restart: unless-stopped
    container_name: dexon-openobserve
    environment:
      ZO_ROOT_USER_EMAIL: ${ZO_ROOT_USER_EMAIL}
      ZO_ROOT_USER_PASSWORD: ${ZO_ROOT_USER_PASSWORD}
      ZO_HTTP_AUTH_BASIC_USER: ${ZO_ROOT_USER_EMAIL}
      ZO_HTTP_AUTH_BASIC_PASSWORD: ${ZO_ROOT_USER_PASSWORD}
    ports:
      - "5080:5080"
    volumes:
      - dexon_openobserve_data:/data
    networks:
      - dexon-network
  api:
    image: dexon-api
    container_name: dexon-api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 12345:12345
    volumes:
      - ./.env:/app/.env
    depends_on:
      dexon_db:
        condition: service_healthy
      openobserve:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:12345/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
    networks:
      - dexon-network
    init: true

volumes:
  dexon_db:
  dexon_openobserve_data:

networks:
  dexon-network:
    driver: bridge